generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id         String         @id
  created_at DateTime       @default(now()) @db.Timestamptz(6)
  updated_at DateTime?      @default(now()) @updatedAt @db.Timestamp(6)
  email      String         @unique
  nickname   String?
  role       EnumRole       @default(GUEST)
  status     EnumUserStatus @default(JOIN)
  receive    receive[]
  store      store[]
  settings   settings[]
  plan       plan?          @relation(fields: [planId], references: [id])
  planId     String?
}

model receive {
  id               String             @id @default(uuid())
  serialCode       String             @unique
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime?          @default(now()) @updatedAt @db.Timestamp(6)
  phone            String
  status           EnumStatus         @default(READY)
  usersId          String
  users            users              @relation(fields: [usersId], references: [id])
  receiveStatusLog receiveStatusLog[]
}

model store {
  id               String    @id @default(uuid())
  created_at       DateTime  @default(now()) @db.Timestamp(6)
  updated_at       DateTime? @default(now()) @updatedAt @db.Timestamp(6)
  name             String
  address          String
  //{types: 'sido', name: '경기도', code: ''}, ... SIGUGUN DONGMYUN types ROAD_NAME BUILDING_NUMBER BUILDING_NAME naver map
  address_elements Json

  phone           String
  //영업시간작성하기, {요일: 월, 오픈여부: true, 오픈시간: 00:00, 마감시간:00:00, 점심시간: 00:00~00:00}..
  business_hours  Json
  //쉬는날 공휴일 쉬는날 여부확인
  holiday         String
  //공식홈페이지
  homepage        String
  //{이름: 인스타그램, url: ~~~}...
  sns             Json
  //순서, 맨앞이 메인
  image           String[]
  description     String
  business_number String[]
  users           users    @relation(fields: [usersId], references: [id], onDelete: Cascade)
  usersId         String
}

model settings {
  id      String @id @default(uuid())
  usersId String @unique
  users   users  @relation(fields: [usersId], references: [id], onDelete: Cascade)

  statsPeriod   Int @default(3) // 통계 기간 (월 단위)
  average_start Int
  average_end   Int
}

model receiveStatusLog {
  id         String     @id @default(uuid())
  receiveId  String
  receive    receive    @relation(fields: [receiveId], references: [id], onDelete: Cascade)
  status     EnumStatus
  changed_at DateTime   @default(now())
}

// enum EnumPlan {
//   BASICS //  접수만 가능 (문자 보내기X)
//   PLUS // 접수 , 출력 가능
//   PREMIUM // 접수, 출력, 문자 모두 가능
// }

model plan {
  id       String  @id @default(uuid())
  name     String  @unique
  features Json
  // [{ "접수": true, "출력": false, "문자": true }]
  // {"receipt": true, "print": false, "send": false}
  users    users[]
}

enum EnumRole {
  GUEST  @map("GUEST")
  ADMIN  @map("ADMIN")
  MASTER @map("MASTER")
}

enum EnumUserStatus {
  JOIN     @map("JOIN")
  WITHDRAW @map("WITHDRAW")
}

enum EnumStatus {
  READY       @map("READY")
  IN_PROGRESS @map("IN_PROGRESS")
  COMPLETED   @map("COMPLETED")
  CANCEL      @map("CANCEL")
}

// npx prisma migrate dev
// npx prisma db push 또는 prisma db push
